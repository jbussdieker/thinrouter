#!/usr/bin/env ruby
$: << File.expand_path("./../../lib", __FILE__)
require 'bundler/setup'
require 'thinrouter'
require 'sinatra'
require 'yaml'

include ThinRouter

DHCP.filename = File.join(ROOT, "config/dhcp.yaml")
DNS.filename = File.join(ROOT, "config/dns.yaml")

set :views, File.join(ROOT, 'templates')
set :public_folder, File.join(ROOT, 'public')

def commit_dhcp
  puts `cd #{ROOT}; sudo ./script/update_dhcp`
  result = ($?.to_i == 0)
end

def commit_dns
  puts `cd #{ROOT}; sudo ./script/update_dns`
  result = ($?.to_i == 0)
end

def dhcpstatus
  result = `sudo service isc-dhcp-server status`

  # Raspian
  if result =~ /Status of ISC DHCP server: dhcpd is running\./
    return :running
  elsif result =~ /Status of ISC DHCP server: dhcpd is not running\./
    return :stopped
  # Ubuntu Trusty
  elsif result =~ /isc-dhcp-server start\/running, process (\d+)/
    return :running
  elsif result =~ /isc-dhcp-server stop\/waiting/
    return :stopped
  # UNKNOWN
  else
    return :unknown
  end
end

def dnsstatus
  puts `sudo service bind9 status`
  puts $?
  ($?.to_i == 0) ? :running : :stopped
end

def dhcplog(filename = '/var/log/dhcpd.log')
  if File.exists?(filename)
    File.read(filename)
  end
end

get '/' do
  erb :'home/index.html', :layout => :'layout/application.html'
end

#################################################################
# DNS
#################################################################

# Index
get '/dns' do
  erb :'dns/index.html', :layout => :'layout/application.html'
end

# New
get '/dns/new' do
  erb :'dns/new.html', :layout => :'layout/application.html'
end

# Create
post '/dns' do
  res = DNS.create({
    :host => params[:host],
    :type => params[:type],
    :value => params[:value],
  })
  result = commit_dns
  redirect "/dns?result=#{result}"
end

# Edit
get '/dns/:type/:host/:value/edit' do |type, host, value|
  rec = DNS.all.find do |rec|
    rec.type == type && rec.host == host && rec.value == value
  end
  erb :'dns/edit.html', :layout => :'layout/application.html', :locals => { :rec => rec }
end

# Update
post '/dns/:type/:host/:value' do |type, host, value|
  rec = DNS.all.find do |rec|
    rec.type == type && rec.host == host && rec.value == value
  end

  rec.host = params[:new_host]
  rec.type = params[:new_type]
  rec.value = params[:new_value]
  rec.save
  result = commit_dns
  redirect "/dns?result=#{result}"
end

# Delete
delete '/dns/:type/:host/:value' do |type, host, value|
  DNS.all.each do |rec|
    if rec.type == type && rec.host == host && rec.value == value
      rec.delete
    end
  end
  result = commit_dns
  redirect "/dns?result=#{result}"
end

get '/dns/start' do
  `sudo service bind9 start`
  redirect "/"
end

get '/dns/stop' do
  `sudo service bind9 stop`
  redirect "/"
end

#################################################################
# DHCP
#################################################################

# Index
get '/dhcp' do
  erb :'dhcp/index.html', :layout => :'layout/application.html'
end

# New
get '/dhcp/new' do
  erb :'dhcp/new.html', :layout => :'layout/application.html'
end

# Create
post '/dhcp' do
  res = DHCP.create({
    :host => params[:host],
    :mac => params[:mac],
    :ip => params[:ip],
  })
  result = commit_dhcp
  redirect "/dhcp?result=#{result}"
end

# Edit
get '/dhcp/:id/edit' do |id|
  res = DHCP.find(id)
  erb :'dhcp/edit.html', :layout => :'layout/application.html', :locals => { :res => res }
end

# Update
post '/dhcp/:id/edit' do |id|
  res = DHCP.find(id)
  res.ip = params[:ip]
  res.mac = params[:mac]
  res.host = params[:new_host]
  res.save
  result = commit_dhcp
  redirect "/dhcp?result=#{result}"
end

# Delete
delete '/dhcp/:id' do |id|
  res = DHCP.find(id)
  res.delete
  result = commit_dhcp
  redirect "/dhcp?result=#{result}"
end

get '/dhcp/start' do
  `sudo service isc-dhcp-server start`
  redirect "/"
end

get '/dhcp/stop' do
  `sudo service isc-dhcp-server stop`
  redirect "/"
end

get '/dhcp/log' do
  erb :'dhcp/log.html', :layout => :'layout/application.html'
end

get '/dhcp/leases' do
  erb :'dhcp/leases.html', :layout => :'layout/application.html'
end
