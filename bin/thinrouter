#!/usr/bin/env ruby
require 'sinatra'
require 'yaml'

set :views, settings.root + '/../templates'
set :public_folder, settings.root + '/../public'

def read_dhcp_reservations(file = "dhcp.yaml")
  YAML.load(File.read(file))
end

def write_dhcp_reservations(data, file = "dhcp.yaml")
  bak = read_dhcp_reservations
  File.open(file, 'w') do |f|
    f.write(data.to_yaml)
  end
  puts `sudo ./update_dhcp`
  result = ($?.to_i == 0)
  if result == false
    File.open(file, 'w') do |f|
      f.write(bak.to_yaml)
    end
  end
  result
end

header = "<a href='/dhcp'>DHCP</a> <a href='/dns'>DNS</a>"

get '/' do
  header
end

get '/dns' do
  erb :'dns/index.html', :layout => :'layout/application.html'
  #"#{header}<pre>#{File.read("/etc/bind/named.conf")}</pre>"
end

post '/dhcp' do
  data = read_dhcp_reservations
  data << {
    :host => params[:host],
    :mac => params[:mac],
    :ip => params[:ip],
  }
  result = write_dhcp_reservations(data)
  redirect "/dhcp?result=#{result}"
end

delete '/dhcp/:host' do
  data = read_dhcp_reservations
  data.delete_if do |item|
    item[:host] == params[:host]
  end
  result = write_dhcp_reservations(data)
  redirect "/dhcp?result=#{result}"
end

get '/dhcp' do
  erb :'dhcp/index.html', :layout => :'layout/application.html'
  #  "#{header}<pre>#{File.read("/etc/dhcp/dhcpd.conf")}</pre>"
  #header + read_dhcp_reservations
end
