#!/usr/bin/env ruby
$: << File.expand_path("./../../lib", __FILE__)
require 'bundler/setup'
require 'thinrouter/dhcp'
require 'thinrouter/dns'
require 'sinatra'
require 'yaml'

Thinrouter::Dhcp.filename = File.expand_path("./../../dhcp.yaml", __FILE__)
Thinrouter::Dns.filename = File.expand_path("./../../dns.yaml", __FILE__)
DHCP = Thinrouter::Dhcp
DNS = Thinrouter::Dns

set :views, settings.root + '/../templates'
set :public_folder, settings.root + '/../public'

def commit_dhcp
  puts `cd #{File.expand_path("./../..", __FILE__)}; sudo ./update_dhcp`
  result = ($?.to_i == 0)
end

def commit_dns
  puts `cd #{File.expand_path("./../..", __FILE__)}; sudo ./update_dns`
  result = ($?.to_i == 0)
end

def dhcpstatus
  result = `sudo service isc-dhcp-server status`

  if result =~ /isc-dhcp-server start\/running, process (\d+)/
    return :running
  elsif result =~ /isc-dhcp-server stop\/waiting/
    return :stopped
  else
    return :unknown
  end
end

def dnsstatus
  puts `sudo service bind9 status`
  puts $?
  result = ($?.to_i == 0)
end

def dhcplog(filename = '/var/log/dhcpd.log')
  if File.exists?(filename)
    File.read(filename)
  end
end

get '/' do
  erb :'home/index.html', :layout => :'layout/application.html'
end

get '/dns' do
  erb :'dns/index.html', :layout => :'layout/application.html'
end

get '/dns/new' do
  erb :'dns/new.html', :layout => :'layout/application.html'
end

post '/dns' do
  res = DNS.create({
    :host => params[:host],
    :type => params[:type],
    :value => params[:value],
  })
  result = commit_dns
  redirect "/dns?result=#{result}"
end

get '/dns/start' do
  `sudo service bind9 start`
  redirect "/"
end

get '/dns/stop' do
  `sudo service bind9 stop`
  redirect "/"
end

get '/dhcp/start' do
  `sudo service isc-dhcp-server start`
  redirect "/"
end

get '/dhcp/stop' do
  `sudo service isc-dhcp-server stop`
  redirect "/"
end

post '/dhcp' do
  res = DHCP.create({
    :host => params[:host],
    :mac => params[:mac],
    :ip => params[:ip],
  })
  result = commit_dhcp
  redirect "/dhcp?result=#{result}"
end

get '/dhcp/:id/edit' do
  res = DHCP.find(params[:id])
  erb :'dhcp/edit.html', :layout => :'layout/application.html', :locals => { :res => res }
end

post '/dhcp/:id/edit' do
  res = DHCP.find(params[:id])
  res.ip = params[:ip]
  res.mac = params[:mac]
  res.host = params[:new_host]
  res.save
  result = commit_dhcp
  redirect "/dhcp?result=#{result}"
end

delete '/dhcp/:id' do
  res = DHCP.find(params[:id])
  res.delete
  result = commit_dhcp
  redirect "/dhcp?result=#{result}"
end

get '/dhcp' do
  erb :'dhcp/index.html', :layout => :'layout/application.html'
end

get '/dhcp/new' do
  erb :'dhcp/new.html', :layout => :'layout/application.html'
end

get '/dhcp/leases' do
  erb :'dhcp/leases.html', :layout => :'layout/application.html'
end
